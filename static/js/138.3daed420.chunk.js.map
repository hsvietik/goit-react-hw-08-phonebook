{"version":3,"file":"static/js/138.3daed420.chunk.js","mappings":"yPAEaA,EAAaC,EAAAA,EAAAA,IAAH,gDAIVC,EAAcD,EAAAA,EAAAA,MAAH,6J,mBCFXE,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACL,EAAD,YACE,kDACA,SAACE,EAAD,CACEI,KAAK,SACLC,KAAK,OACLC,SAAU,SAAAC,GAAG,OACXL,GAASM,EAAAA,EAAAA,GAAUD,EAAIE,cAAcC,MAAMC,eADhC,MAMpB,ECjBYC,EAAOb,EAAAA,EAAAA,GAAH,qI,UCCJc,EAAOd,EAAAA,EAAAA,GAAH,gGAMJe,EAAcf,EAAAA,EAAAA,EAAH,wCAIXgB,EAAehB,EAAAA,EAAAA,OAAH,iQAaZiB,EAAkBjB,EAAAA,EAAAA,OAAH,iQAcfkB,GAAalB,EAAAA,EAAAA,GAAOmB,EAAAA,IAAPnB,CAAH,4GAQVoB,GAAepB,EAAAA,EAAAA,GAAOqB,EAAAA,IAAPrB,CAAH,2C,UCnCZsB,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChBC,EAA+BD,EAA/BC,GAAInB,EAA2BkB,EAA3BlB,KAAMoB,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,SACpBvB,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACU,EAAD,YACE,SAACG,EAAD,CACEX,KAAK,SACLqB,QAAS,kBAAMxB,GAASyB,EAAAA,EAAAA,IAAeL,GAA9B,EAFX,SAIGG,GAAW,SAACN,EAAD,KAAmB,SAAC,MAAD,OAGjC,UAACL,EAAD,WACGV,EADH,KACWoB,MAEX,SAACT,EAAD,CAAcV,KAAK,SAASqB,QAAS,kBAAMxB,GAAS0B,EAAAA,EAAAA,IAAcL,GAA7B,EAArC,UACE,SAACN,EAAD,QAIP,EC7BYY,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OACE,SAAClB,EAAD,UACGkB,EAASC,KAAI,SAAAT,GACZ,OAAO,SAACD,EAAD,CAASC,QAASA,GAAcA,EAAQC,GAChD,KAGN,E,UCPKS,GAAiBjC,EAAAA,EAAAA,GAAOkC,EAAAA,GAAPlC,CAAH,yLAYb,SAASmC,IACd,OACE,sDAC6B,KAC3B,SAACF,EAAD,CAAgBG,GAAG,OAAnB,yBAFF,UAKH,C,cCSD,MAxBA,WACE,IAAML,GAAWM,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,EAAmBV,EAASQ,QAAO,qBAAGlC,KACnCO,cAAc8B,SAASH,EADS,IAIjCpC,GAAWC,EAAAA,EAAAA,MAKjB,OAJAuC,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAGF,gCACE,SAACD,EAAD,IACCuC,EAAiBI,OAAS,GACzB,SAACf,EAAD,CAAaC,SAAUU,KAEvB,SAACN,EAAD,MAIP,C,gFC9BM,IAAMG,EAAc,SAAAQ,GAAK,OAAIA,EAAMf,SAASgB,KAAnB,EAGnBP,EAAY,SAAAM,GAAK,OAAIA,EAAMP,MAAV,C","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactList/NoContactsMessage.jsx","pages/Home.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  border-radius: 6px;\n  background-color: #e1d5bb;\n  &:focus,\n  &hover {\n    outline: solid 2px #c7a149;\n  }\n`;\n","import { SearchForm, SearchInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <SearchForm>\n      <h2>Find contact by name</h2>\n      <SearchInput\n        name=\"search\"\n        type=\"text\"\n        onChange={evt =>\n          dispatch(setFilter(evt.currentTarget.value.toLowerCase()))\n        }\n      />\n    </SearchForm>\n  );\n};\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { FaTrash, FaHeart } from 'react-icons/fa';\nexport const Item = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  margin: 0px;\n`;\nexport const ContactName = styled.p`\n  margin: 0px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  color: inherit;\n`;\nexport const ToggleFavourite = styled.button`\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  color: inherit;\n`;\n\nexport const DeleteIcon = styled(FaTrash)`\n  width: 15px;\n  height: 15px;\n  &:hover,\n  &:focus {\n    color: #389677;\n  }\n`;\nexport const ColoredHeart = styled(FaHeart)`\n  color: #b64d3e;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FaRegHeart } from 'react-icons/fa';\nimport {\n  Item,\n  ContactName,\n  ToggleFavourite,\n  DeleteButton,\n  DeleteIcon,\n  ColoredHeart,\n} from './Contact.styled';\nimport { deleteContact, toggleFavorite } from '../../redux/operations';\n\nexport const Contact = ({ contact }) => {\n  const { id, name, number, favorite } = contact;\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      <ToggleFavourite\n        type=\"button\"\n        onClick={() => dispatch(toggleFavorite(contact))}\n      >\n        {favorite ? <ColoredHeart /> : <FaRegHeart />}\n      </ToggleFavourite>\n\n      <ContactName>\n        {name}: {number}\n      </ContactName>\n      <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <DeleteIcon />\n      </DeleteButton>\n    </Item>\n  );\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from '../Contact/Contact';\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(contact => {\n        return <Contact contact={contact} key={contact.id} />;\n      })}\n    </List>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst AddContactLink = styled(Link)`\n  text-decoration: none;\n  font-style: inherit;\n  color: inherit;\n  font-size: 18px;\n  font-weight: 900;\n  &:hover,\n  &:focus {\n    color: #1f7ba0;\n  }\n`;\n\nexport function NoContactsMessage() {\n  return (\n    <p>\n      There are no contacts, use{' '}\n      <AddContactLink to=\"/add\">Add contact</AddContactLink> form\n    </p>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { NoContactsMessage } from '../components/ContactList/NoContactsMessage';\nimport { getContacts, getFilter } from '../redux/selectors';\nimport { fetchContacts } from '../redux/operations';\n\nfunction Home() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  let filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <Filter />\n      {filteredContacts.length > 0 ? (\n        <ContactList contacts={filteredContacts} />\n      ) : (\n        <NoContactsMessage />\n      )}\n    </section>\n  );\n}\n\nexport default Home;\n\n// const contacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', favorite: true },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12', favorite: true },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79', favorite: false },\n//   { id: 'id-4', name: 'Annie Copel', number: '227-91-26', favorite: false },\n// ];\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contactcontactss.isLoading;\nexport const getError = state => state.tasks.error;\nexport const getFilter = state => state.filter;\n"],"names":["SearchForm","styled","SearchInput","Filter","dispatch","useDispatch","name","type","onChange","evt","setFilter","currentTarget","value","toLowerCase","List","Item","ContactName","DeleteButton","ToggleFavourite","DeleteIcon","FaTrash","ColoredHeart","FaHeart","Contact","contact","id","number","favorite","onClick","toggleFavorite","deleteContact","ContactList","contacts","map","AddContactLink","Link","NoContactsMessage","to","useSelector","getContacts","filter","getFilter","filteredContacts","includes","useEffect","fetchContacts","length","state","items"],"sourceRoot":""}